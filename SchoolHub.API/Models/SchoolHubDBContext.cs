// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace SchoolHub.Models;

public partial class SchoolHubDBContext : DbContext
{
    public SchoolHubDBContext()
    {
    }

    public SchoolHubDBContext(DbContextOptions<SchoolHubDBContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Class> Classes { get; set; }

    public virtual DbSet<Sibling> Siblings { get; set; }

    public virtual DbSet<Student> Students { get; set; }

    public virtual DbSet<Teacher> Teachers { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        => optionsBuilder.UseSqlServer("Data Source=tcp:schoolhub.database.windows.net;Initial Catalog=school_hub;User ID=schooladmin;Password=Password123#");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Class>(entity =>
        {
            entity.ToTable("Class");

            entity.Property(e => e.ClassName)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("Class");
            entity.Property(e => e.Section)
                .HasMaxLength(100)
                .IsUnicode(false);

            entity.HasOne(d => d.ClassTeacher).WithMany(p => p.ClassClassTeachers)
                .HasForeignKey(d => d.ClassTeacherId)
                .HasConstraintName("FK_Class_Teacher3");

            entity.HasOne(d => d.EnglishTeacher).WithMany(p => p.ClassEnglishTeachers)
                .HasForeignKey(d => d.EnglishTeacherId)
                .HasConstraintName("FK_Class_Teacher");

            entity.HasOne(d => d.MathsTeacher).WithMany(p => p.ClassMathsTeachers)
                .HasForeignKey(d => d.MathsTeacherId)
                .HasConstraintName("FK_Class_Teacher2");

            entity.HasOne(d => d.ScienceTeacher).WithMany(p => p.ClassScienceTeachers)
                .HasForeignKey(d => d.ScienceTeacherId)
                .HasConstraintName("FK_Class_Teacher1");
        });

        modelBuilder.Entity<Sibling>(entity =>
        {
            entity.Property(e => e.SiblingName)
                .HasMaxLength(200)
                .IsUnicode(false);

            entity.HasOne(d => d.Student).WithMany(p => p.Siblings)
                .HasForeignKey(d => d.StudentId)
                .HasConstraintName("FK_Siblings_Student");
        });

        modelBuilder.Entity<Student>(entity =>
        {
            entity.ToTable("Student");

            entity.Property(e => e.Address1)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.Address2)
                .HasMaxLength(300)
                .IsUnicode(false);
            entity.Property(e => e.AddressCity)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.AddressPincode)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.BloodGroup)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.ContactEmailId)
                .HasMaxLength(300)
                .IsUnicode(false);
            entity.Property(e => e.ContactNumber1)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.ContactNumber2)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.FatherName)
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.Gender)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.MotherName)
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.PhotoFilePath)
                .HasMaxLength(800)
                .IsUnicode(false);
            entity.Property(e => e.RollNumber)
                .HasMaxLength(20)
                .IsUnicode(false);

            entity.HasOne(d => d.Class).WithMany(p => p.Students)
                .HasForeignKey(d => d.ClassId)
                .HasConstraintName("FK_Student_Class");
        });

        modelBuilder.Entity<Teacher>(entity =>
        {
            entity.ToTable("Teacher");

            entity.Property(e => e.Address1)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.Address2)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.AddressCity)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.AddressPincode)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.EmployeeId)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("EmployeeID");
            entity.Property(e => e.Gender)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.Name)
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.PhoneNumber)
                .HasMaxLength(12)
                .IsUnicode(false);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}